#include <iostream>
#include <vector>
using namespace std;

struct Cell{
	int x, y, rank;
	Cell* root;

	Cell(int x, int y){
		this->x = x;
		this->y = y;
		this->rank = 0;
		this->root = this;
	}

};

Cell* find(Cell* x){
	if(x->root!=x){ //path compression
		Cell* root = find(x->root);
		x->root = root;
		return root;
	}
	return x;
}

void uni(Cell* x, Cell* y){
	Cell* xRoot = find(x);
	Cell* yRoot = find(y);

	if(xRoot==yRoot)
		return;

	if(xRoot->rank < yRoot->rank)
		xRoot->root = yRoot;
	else if(xRoot->rank > yRoot->rank)
		yRoot->root = xRoot;
	else{
		yRoot->root = xRoot;
		xRoot->rank++;
	}
}

int main() {

	int N = 20;
	vector<vector<Cell*> > cells(N, vector<Cell*>(N));

	cells = new Cell*[N];
	for(int i=0;i<N;i++)
		cells[i] = new Cell[N];

	cout << "!!!Hello World!!!" << endl; // prints !!!Hello World!!!
	return 0;
}
